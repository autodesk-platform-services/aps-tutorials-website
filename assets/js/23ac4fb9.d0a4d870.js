"use strict";(self.webpackChunkaps_tutorials_website=self.webpackChunkaps_tutorials_website||[]).push([[7647],{2193:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>k,contentTitle:()=>v,default:()=>I,frontMatter:()=>y,metadata:()=>w,toc:()=>j});var r=n(8168),a=(n(6540),n(5680)),s=n(4472);const o={toc:[]},i="wrapper";function l(e){let{components:t,...n}=e;return(0,a.yg)(i,(0,r.A)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("p",null,"Let's implement the logic for browsing through the individual hubs, projects, folders, items,\nand versions. Add the following code to the end of the ",(0,a.yg)("inlineCode",{parentName:"p"},"services/aps.js")," file:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="services/aps.js"',title:'"services/aps.js"'},"service.getHubs = async (accessToken) => {\n    const resp = await dataManagementClient.getHubs({ accessToken });\n    return resp.data;\n};\n\nservice.getProjects = async (hubId, accessToken) => {\n    const resp = await dataManagementClient.getHubProjects(hubId, { accessToken });\n    return resp.data;\n};\n\nservice.getProjectContents = async (hubId, projectId, folderId, accessToken) => {\n    if (!folderId) {\n        const resp = await dataManagementClient.getProjectTopFolders(hubId, projectId, { accessToken });\n        return resp.data;\n    } else {\n        const resp = await dataManagementClient.getFolderContents(projectId, folderId, { accessToken });\n        return resp.data;\n    }\n};\n\nservice.getItemVersions = async (projectId, itemId, accessToken) => {\n    const resp = await dataManagementClient.getItemVersions(projectId, itemId, { accessToken });\n    return resp.data;\n};\n")))}l.isMDXComponent=!0;const u={toc:[]},c="wrapper";function p(e){let{components:t,...n}=e;return(0,a.yg)(c,(0,r.A)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("p",null,"Create a ",(0,a.yg)("inlineCode",{parentName:"p"},"hubs.js")," file under the ",(0,a.yg)("inlineCode",{parentName:"p"},"routes")," subfolder with the following content:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="routes/hubs.js"',title:'"routes/hubs.js"'},"const express = require('express');\nconst { authRefreshMiddleware, getHubs, getProjects, getProjectContents, getItemVersions } = require('../services/aps.js');\n\nlet router = express.Router();\n\nrouter.use('/api/hubs', authRefreshMiddleware);\n\nrouter.get('/api/hubs', async function (req, res, next) {\n    try {\n        const hubs = await getHubs(req.internalOAuthToken.access_token);\n        res.json(hubs.map(hub => ({ id: hub.id, name: hub.attributes.name })));\n    } catch (err) {\n        next(err);\n    }\n});\n\nrouter.get('/api/hubs/:hub_id/projects', async function (req, res, next) {\n    try {\n        const projects = await getProjects(req.params.hub_id, req.internalOAuthToken.access_token);\n        res.json(projects.map(project => ({ id: project.id, name: project.attributes.name })));\n    } catch (err) {\n        next(err);\n    }\n});\n\nrouter.get('/api/hubs/:hub_id/projects/:project_id/contents', async function (req, res, next) {\n    try {\n        const entries = await getProjectContents(req.params.hub_id, req.params.project_id, req.query.folder_id, req.internalOAuthToken.access_token);\n        res.json(entries.map(entry => ({ id: entry.id, name: entry.attributes.displayName, folder: entry.type === 'folders' })));\n    } catch (err) {\n        next(err);\n    }\n});\n\nrouter.get('/api/hubs/:hub_id/projects/:project_id/contents/:item_id/versions', async function (req, res, next) {\n    try {\n        const versions = await getItemVersions(req.params.project_id, req.params.item_id, req.internalOAuthToken.access_token);\n        res.json(versions.map(version => ({ id: version.id, name: version.attributes.createTime })));\n    } catch (err) {\n        next(err);\n    }\n});\n\nmodule.exports = router;\n")),(0,a.yg)("p",null,"And mount the router to our server application by modifying ",(0,a.yg)("inlineCode",{parentName:"p"},"server.js"),":"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="server.js"',title:'"server.js"'},"const express = require('express');\nconst session = require('cookie-session');\nconst { PORT, SERVER_SESSION_SECRET } = require('./config.js');\n\nlet app = express();\napp.use(express.static('wwwroot'));\napp.use(session({ secret: SERVER_SESSION_SECRET, maxAge: 24 * 60 * 60 * 1000 }));\napp.use(require('./routes/auth.js'));\n// highlight-start\napp.use(require('./routes/hubs.js'));\n// highlight-end\napp.listen(PORT, () => console.log(`Server listening on port ${PORT}...`));\n")))}p.isMDXComponent=!0;const d={toc:[]},m="wrapper";function h(e){let{components:t,...n}=e;return(0,a.yg)(m,(0,r.A)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("p",null,"Create a ",(0,a.yg)("inlineCode",{parentName:"p"},"APS.Hubs.cs")," under the ",(0,a.yg)("inlineCode",{parentName:"p"},"Models")," subfolder with the following content:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Models/APS.Hubs.cs"',title:'"Models/APS.Hubs.cs"'},"using System.Collections.Generic;\nusing System.Threading.Tasks;\nusing Autodesk.DataManagement;\nusing Autodesk.DataManagement.Model;\n\npublic partial class APS\n{\n    public async Task<IEnumerable<HubData>> GetHubs(Tokens tokens)\n    {\n        var dataManagementClient = new DataManagementClient();\n        var hubs = await dataManagementClient.GetHubsAsync(accessToken: tokens.InternalToken);\n        return hubs.Data;\n    }\n\n    public async Task<IEnumerable<ProjectData>> GetProjects(string hubId, Tokens tokens)\n    {\n        var dataManagementClient = new DataManagementClient();\n        var projects = await dataManagementClient.GetHubProjectsAsync(hubId, accessToken: tokens.InternalToken);\n        return projects.Data;\n    }\n\n    public async Task<IEnumerable<TopFolderData>> GetTopFolders(string hubId, string projectId, Tokens tokens)\n    {\n        var dataManagementClient = new DataManagementClient();\n        var folders = await dataManagementClient.GetProjectTopFoldersAsync(hubId, projectId, accessToken: tokens.InternalToken);\n        return folders.Data;\n    }\n\n    public async Task<IEnumerable<IFolderContentsData>> GetFolderContents(string projectId, string folderId, Tokens tokens)\n    {\n        var dataManagementClient = new DataManagementClient();\n        var contents = await dataManagementClient.GetFolderContentsAsync(projectId, folderId, accessToken: tokens.InternalToken);\n        return contents.Data;\n    }\n\n    public async Task<IEnumerable<VersionData>> GetVersions(string projectId, string itemId, Tokens tokens)\n    {\n        var dataManagementClient = new DataManagementClient();\n        var versions = await dataManagementClient.GetItemVersionsAsync(projectId, itemId, accessToken: tokens.InternalToken);\n        return versions.Data;\n    }\n}\n")))}h.isMDXComponent=!0;const b={toc:[]},g="wrapper";function f(e){let{components:t,...n}=e;return(0,a.yg)(g,(0,r.A)({},b,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("p",null,"Create a ",(0,a.yg)("inlineCode",{parentName:"p"},"HubsController.cs")," file under the ",(0,a.yg)("inlineCode",{parentName:"p"},"Controllers")," subfolder with the following content:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Controllers/HubsController.cs"',title:'"Controllers/HubsController.cs"'},'using System.Linq;\nusing System.Threading.Tasks;\nusing Autodesk.DataManagement.Model;\nusing Microsoft.AspNetCore.Mvc;\n\n[ApiController]\n[Route("api/[controller]")]\npublic class HubsController : ControllerBase\n{\n    private readonly APS _aps;\n\n    public HubsController(APS aps)\n    {\n        _aps = aps;\n    }\n\n    [HttpGet()]\n    public async Task<ActionResult> ListHubs()\n    {\n        var tokens = await AuthController.PrepareTokens(Request, Response, _aps);\n        if (tokens == null)\n        {\n            return Unauthorized();\n        }\n        return Ok(\n            from hub in await _aps.GetHubs(tokens)\n            select new { id = hub.Id, name = hub.Attributes.Name }\n        );\n    }\n\n    [HttpGet("{hub}/projects")]\n    public async Task<ActionResult> ListProjects(string hub)\n    {\n        var tokens = await AuthController.PrepareTokens(Request, Response, _aps);\n        if (tokens == null)\n        {\n            return Unauthorized();\n        }\n        return Ok(\n            from project in await _aps.GetProjects(hub, tokens)\n            select new { id = project.Id, name = project.Attributes.Name }\n        );\n    }\n\n    [HttpGet("{hub}/projects/{project}/contents")]\n    public async Task<ActionResult> ListItems(string hub, string project, [FromQuery] string folder_id)\n    {\n        var tokens = await AuthController.PrepareTokens(Request, Response, _aps);\n        if (tokens == null)\n        {\n            return Unauthorized();\n        }\n        if (string.IsNullOrEmpty(folder_id))\n        {\n            return Ok(\n                from folder in await _aps.GetTopFolders(hub, project, tokens)\n                select new { id = folder.Id, name = folder.Attributes.DisplayName, folder = true }\n            );\n        }\n        else\n        {\n            var contents = await _aps.GetFolderContents(project, folder_id, tokens);\n            var folders = from entry in contents\n                where entry is FolderData\n                select entry as FolderData into folder\n                select new { id = folder.Id, name = folder.Attributes.DisplayName, folder = true };\n            var items = from entry in contents\n                where entry is ItemData\n                select entry as ItemData into item\n                select new { id = item.Id, name = item.Attributes.DisplayName, folder = false };\n            return Ok(folders.Concat(items));\n        }\n    }\n\n    [HttpGet("{hub}/projects/{project}/contents/{item}/versions")]\n    public async Task<ActionResult> ListVersions(string hub, string project, string item)\n    {\n        var tokens = await AuthController.PrepareTokens(Request, Response, _aps);\n        if (tokens == null)\n        {\n            return Unauthorized();\n        }\n        return Ok(\n            from version in await _aps.GetVersions(project, item, tokens)\n            select new { id = version.Id, name = version.Attributes.CreateTime }\n        );\n    }\n}\n')),(0,a.yg)("p",null,"The controller handles several endpoints for browsing the content in other APS-based\napplications such as BIM 360 Docs and ACC. We will make use of these endpoints when\nbuilding the UI part of the application."))}f.isMDXComponent=!0;const y={},v="Data Browsing",w={unversionedId:"tutorials/hubs-browser/data",id:"tutorials/hubs-browser/data",title:"Data Browsing",description:"In this step we'll extend our server so that we can browse the content of other APS-based",source:"@site/docs/03-tutorials/02-hubs-browser/03-data.mdx",sourceDirName:"03-tutorials/02-hubs-browser",slug:"/tutorials/hubs-browser/data",permalink:"/tutorials/hubs-browser/data",draft:!1,editUrl:"https://github.com/autodesk-platform-services/aps-tutorials-website/edit/master/docs/03-tutorials/02-hubs-browser/03-data.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Authentication",permalink:"/tutorials/hubs-browser/auth"},next:{title:"Viewer & UI",permalink:"/tutorials/hubs-browser/viewer"}},k={},j=[{value:"Browsing hubs",id:"browsing-hubs",level:2},{value:"Server endpoints",id:"server-endpoints",level:2},{value:"Try it out",id:"try-it-out",level:2}],T={toc:j},C="wrapper";function I(e){let{components:t,...o}=e;return(0,a.yg)(C,(0,r.A)({},T,o,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"data-browsing"},"Data Browsing"),(0,a.yg)("p",null,"In this step we'll extend our server so that we can browse the content of other APS-based\napplications such as BIM 360 Docs or Autodesk Docs. We will basically follow the Data Management\nservice's hierarchy of hubs, projects, folders, items, and versions:"),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"Data Management structure",src:n(3668).A,width:"1399",height:"864"})),(0,a.yg)("h2",{id:"browsing-hubs"},"Browsing hubs"),(0,a.yg)("p",null,"First, let's add a couple of helper methods for browsing through the hubs, projects,\nfolders, items, and versions:"),(0,a.yg)(s.A,{NodeJsVsCode:l,DotNetVsCode:h,DotNetVs2022:h,mdxType:"EnvTabs"}),(0,a.yg)("h2",{id:"server-endpoints"},"Server endpoints"),(0,a.yg)("p",null,"Next, let's expose the new functionality to the client-side code through another\nset of endpoints."),(0,a.yg)(s.A,{NodeJsVsCode:p,DotNetVsCode:f,DotNetVs2022:f,mdxType:"EnvTabs"}),(0,a.yg)("h2",{id:"try-it-out"},"Try it out"),(0,a.yg)("p",null,"And that's it for the server side. Time to try it out!"),(0,a.yg)("p",null,"Start (or restart) the app from Visual Studio Code as usual, and navigate to\n",(0,a.yg)("a",{parentName:"p",href:"http://localhost:8080/api/hubs"},"http://localhost:8080/api/hubs")," in the browser.\nThe server should respond with a JSON list of all the hubs you have access to.\nTry copying the ID of one of the hubs, and use it in another address: http://localhost:8080/api/hubs/your-hub-id/projects.\nIn this case the server application should respond with a JSON list of all projects\navailable under the specified hub."),(0,a.yg)("admonition",{type:"info"},(0,a.yg)("p",{parentName:"admonition"},"If you skipped the login procedure in the previous step, or restarted your server application,\nyou may need to go to ",(0,a.yg)("a",{parentName:"p",href:"http://localhost:8080/api/auth/login"},"http://localhost:8080/api/auth/login"),"\nagain to make sure that all the authentication data is available in cookies before testing\nthe ",(0,a.yg)("inlineCode",{parentName:"p"},"/api/hubs")," endpoint.")),(0,a.yg)("admonition",{type:"tip"},(0,a.yg)("p",{parentName:"admonition"},"If you are using Google Chrome, consider installing ",(0,a.yg)("a",{parentName:"p",href:"https://chrome.google.com/webstore/detail/json-formatter/bcjindcccaagfpapjjmafapmmgkkhgoa?hl=en"},"JSON Formatter"),"\nor a similar extension to automatically format JSON responses.")),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"Hubs Response",src:n(6961).A,width:"1500",height:"929"})))}I.isMDXComponent=!0},3668:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/dm-structure-b5f87fcf63e09968a2997e1df1c9d095.webp"},4472:(e,t,n)=>{n.d(t,{A:()=>o});var r=n(6540),a=n(9489),s=n(7227);function o(e){let{NodeJsVsCode:t,DotNetVsCode:n,DotNetVs2022:o}=e;return r.createElement(a.A,{groupId:"development-environment"},r.createElement(s.A,{value:"nodejs-vscode",label:"Node.js & VSCode",default:!0},r.createElement(t,null)),r.createElement(s.A,{value:"dotnet-vscode",label:".NET & VSCode"},r.createElement(n,null)),r.createElement(s.A,{value:"dotnet-vs2022",label:".NET & VS2022"},r.createElement(o,null)))}},5680:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>h});var r=n(6540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(n),m=a,h=p["".concat(l,".").concat(m)]||p[m]||d[m]||s;return n?r.createElement(h,o(o({ref:t},c),{},{components:n})):r.createElement(h,o({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[p]="string"==typeof e?e:a,o[1]=i;for(var u=2;u<s;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6961:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/hubs-response-6ca89cc77b1e67f6197c74b8561d0115.webp"},7227:(e,t,n)=>{n.d(t,{A:()=>o});var r=n(6540),a=n(53);const s={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:n,className:o}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.A)(s.tabItem,o),hidden:n},t)}},9489:(e,t,n)=>{n.d(t,{A:()=>k});var r=n(8168),a=n(6540),s=n(53),o=n(4245),i=n(6347),l=n(2814),u=n(5167),c=n(1269);function p(e){return function(e){return a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:a}}=e;return{value:t,label:n,attributes:r,default:a}}))}function d(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??p(n);return function(e){const t=(0,u.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const r=(0,i.W6)(),s=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l.aZ)(s),(0,a.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(r.location.search);t.set(s,e),r.replace({...r.location,search:t.toString()})}),[s,r])]}function b(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,s=d(e),[o,i]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:s}))),[l,u]=h({queryString:n,groupId:r}),[p,b]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,s]=(0,c.Dv)(n);return[r,(0,a.useCallback)((e=>{n&&s.set(e)}),[n,s])]}({groupId:r}),g=(()=>{const e=l??p;return m({value:e,tabValues:s})?e:null})();(0,a.useLayoutEffect)((()=>{g&&i(g)}),[g]);return{selectedValue:o,selectValue:(0,a.useCallback)((e=>{if(!m({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),b(e)}),[u,b,s]),tabValues:s}}var g=n(1062);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function y(e){let{className:t,block:n,selectedValue:i,selectValue:l,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:p}=(0,o.a_)(),d=e=>{const t=e.currentTarget,n=c.indexOf(t),r=u[n].value;r!==i&&(p(t),l(r))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:o}=e;return a.createElement("li",(0,r.A)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>c.push(e),onKeyDown:m,onClick:d},o,{className:(0,s.A)("tabs__item",f.tabItem,o?.className,{"tabs__item--active":i===t})}),n??t)})))}function v(e){let{lazy:t,children:n,selectedValue:r}=e;const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=s.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},s.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function w(e){const t=b(e);return a.createElement("div",{className:(0,s.A)("tabs-container",f.tabList)},a.createElement(y,(0,r.A)({},e,t)),a.createElement(v,(0,r.A)({},e,t)))}function k(e){const t=(0,g.A)();return a.createElement(w,(0,r.A)({key:String(t)},e))}}}]);