"use strict";(self.webpackChunkaps_tutorials_website=self.webpackChunkaps_tutorials_website||[]).push([[2324],{3248:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/vs2022-basicui-run-0b3e7cb65c75f2ed504fecba0a20c6de.webp"},4472:(e,t,n)=>{n.d(t,{A:()=>i});var a=n(6540),o=n(9489),r=n(7227);function i(e){let{NodeJsVsCode:t,DotNetVsCode:n,DotNetVs2022:i}=e;return a.createElement(o.A,{groupId:"development-environment"},a.createElement(r.A,{value:"nodejs-vscode",label:"Node.js & VSCode",default:!0},a.createElement(t,null)),a.createElement(r.A,{value:"dotnet-vscode",label:".NET & VSCode"},a.createElement(n,null)),a.createElement(r.A,{value:"dotnet-vs2022",label:".NET & VS2022"},a.createElement(i,null)))}},5201:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/medias/modify-your-models-4f9f7bd794c480da8b00321373299bb6.mp4"},5680:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>g});var a=n(6540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=a.createContext({}),l=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return a.createElement(u.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=l(n),d=o,g=p["".concat(u,".").concat(d)]||p[d]||m[d]||r;return n?a.createElement(g,i(i({ref:t},c),{},{components:n})):a.createElement(g,i({ref:t},c))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=d;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s[p]="string"==typeof e?e:o,i[1]=s;for(var l=2;l<r;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6983:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/vscode-nodejs-basicui-run-7f1f37d9119d5d129da5ea0e192a77a5.webp"},7227:(e,t,n)=>{n.d(t,{A:()=>i});var a=n(6540),o=n(53);const r={tabItem:"tabItem_Ymn6"};function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.A)(r.tabItem,i),hidden:n},t)}},9172:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>N,contentTitle:()=>S,default:()=>j,frontMatter:()=>A,metadata:()=>I,toc:()=>C});var a=n(8168),o=(n(6540),n(5680)),r=n(4472);const i={toc:[]},s="wrapper";function u(e){let{components:t,...n}=e;return(0,o.yg)(s,(0,a.A)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("p",null,"The following apis should be added to the ",(0,o.yg)("inlineCode",{parentName:"p"},"DesignAutomationController.cs")," file before the last line ",(0,o.yg)("inlineCode",{parentName:"p"},"GetDefinedActivities")," method."),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"StartWorkitem")),(0,o.yg)("p",null,"This is where we actually start the Design Automation. This endpoint also uploads the input file to an OSS Bucket and define that the output should be saved at the same bucket. To help you identify the files, both input and output uses the same original file name, but with a suffix (input or output) plus a time stamp."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-cs"},'    /// <summary>\n    /// Direct To S3\n    /// ref : https://aps.autodesk.com/blog/new-feature-support-direct-s3-migration-inputoutput-files-design-automation\n    /// </summary>\n    static void onUploadProgress(float progress, TimeSpan elapsed, List<UploadItemDesc> objects)\n    {\n        Console.WriteLine("progress: {0} elapsed: {1} objects: {2}", progress, elapsed, string.Join(", ", objects));\n    }\n    public static async Task<string> GetObjectId(string bucketKey, string objectKey, dynamic oauth, string fileSavePath)\n    {\n        try\n        {\n            ObjectsApi objectsApi = new ObjectsApi();\n            objectsApi.Configuration.AccessToken = oauth.access_token;\n            List<UploadItemDesc> uploadRes = await objectsApi.uploadResources(bucketKey,\n                new List<UploadItemDesc> {\n                    new UploadItemDesc(objectKey, await System.IO.File.ReadAllBytesAsync(fileSavePath))\n                },\n                null,\n                onUploadProgress,\n                null);\n            Console.WriteLine("**** Upload object(s) response(s):");\n            DynamicDictionary objValues = uploadRes[0].completed;\n            objValues.Dictionary.TryGetValue("objectId", out var id);\n\n            return id?.ToString();\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine($"Exception when preparing input url:{ex.Message}");\n            throw;\n        }\n    }\n\n    /// <summary>\n    /// Input for StartWorkitem\n    /// </summary>\n    public class StartWorkitemInput\n    {\n        public IFormFile inputFile { get; set; }\n        public string data { get; set; }\n    }\n\n    /// <summary>\n    /// Start a new workitem\n    /// </summary>\n    [HttpPost]\n    [Route("api/aps/designautomation/workitems")]\n    public async Task<IActionResult> StartWorkitem([FromForm] StartWorkitemInput input)\n    {\n        // basic input validation\n        JObject workItemData = JObject.Parse(input.data);\n        string widthParam = workItemData["width"].Value<string>();\n        string heigthParam = workItemData["height"].Value<string>();\n        string activityName = string.Format("{0}.{1}", NickName, workItemData["activityName"].Value<string>());\n        string browserConnectionId = workItemData["browserConnectionId"].Value<string>();\n\n        // save the file on the server\n        var fileSavePath = Path.Combine(_env.ContentRootPath, Path.GetFileName(input.inputFile.FileName));\n        using (var stream = new FileStream(fileSavePath, FileMode.Create)) await input.inputFile.CopyToAsync(stream);\n\n        // OAuth token\n        dynamic oauth = await OAuthController.GetInternalAsync();\n\n        // upload file to OSS Bucket\n        // 1. ensure bucket existis\n        string bucketKey = NickName.ToLower() + "-designautomation";\n        BucketsApi buckets = new BucketsApi();\n        buckets.Configuration.AccessToken = oauth.access_token;\n        try\n        {\n            PostBucketsPayload bucketPayload = new PostBucketsPayload(bucketKey, null, PostBucketsPayload.PolicyKeyEnum.Transient);\n            await buckets.CreateBucketAsync(bucketPayload, "US");\n        }\n        catch { }; // in case bucket already exists\n                    // 2. upload inputFile\n        string inputFileNameOSS = string.Format("{0}_input_{1}", DateTime.Now.ToString("yyyyMMddhhmmss"), Path.GetFileName(input.inputFile.FileName));// avoid overriding\n        // prepare workitem arguments\n        // 1. input file\n        XrefTreeArgument inputFileArgument = new XrefTreeArgument()\n        {\n            Url = await GetObjectId(bucketKey, inputFileNameOSS, oauth, fileSavePath),\n            Headers = new Dictionary<string, string>(){\n                { "Authorization", "Bearer " + oauth.access_token} }\n        };\n\n        // 2. input json\n        dynamic inputJson = new JObject();\n        inputJson.Width = widthParam;\n        inputJson.Height = heigthParam;\n        XrefTreeArgument inputJsonArgument = new XrefTreeArgument()\n        {\n            Url = "data:application/json, " + ((JObject)inputJson).ToString(Formatting.None).Replace("\\"", "\'")\n        };\n        // 3. output file\n        string outputFileNameOSS = string.Format("{0}_output_{1}", DateTime.Now.ToString("yyyyMMddhhmmss"), Path.GetFileName(input.inputFile.FileName)); // avoid overriding            \n        XrefTreeArgument outputFileArgument = new XrefTreeArgument()\n        {\n            Url = await GetObjectId(bucketKey, outputFileNameOSS, oauth, fileSavePath),\n            Headers = new Dictionary<string, string>()\n            {\n                { "Authorization", "Bearer " + oauth.access_token}\n            },\n            Verb = Verb.Put\n        };\n\n        if (System.IO.File.Exists(fileSavePath))\n        {\n            System.IO.File.Delete(fileSavePath);\n        }\n\n        // prepare & submit workitem            \n        WorkItem workItemSpec = new WorkItem()\n        {\n            ActivityId = activityName,\n            Arguments = new Dictionary<string, IArgument>()\n            {\n                { "inputFile", inputFileArgument },\n                { "inputJson",  inputJsonArgument },\n                { "outputFile", outputFileArgument }\n                \n            }\n        };\n        WorkItemStatus workItemStatus = await _designAutomation.CreateWorkItemAsync(workItemSpec);\n        MonitorWorkitem(oauth, browserConnectionId, workItemStatus, outputFileNameOSS);\n        return Ok(new { WorkItemId = workItemStatus.Id });\n    }\n')),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"MonitorWorkitem")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-cs"},'    private async Task MonitorWorkitem(dynamic oauth, string browserConnectionId, WorkItemStatus workItemStatus, string outputFileNameOSS)\n    {\n        try\n        { \n            while (!workItemStatus.Status.IsDone())\n            {\n                await Task.Delay(TimeSpan.FromSeconds(2));\n                workItemStatus = await _designAutomation.GetWorkitemStatusAsync(workItemStatus.Id);\n                await _hubContext.Clients.Client(browserConnectionId).SendAsync("onComplete", workItemStatus.ToString());\n            }\n            using (var httpClient = new HttpClient())\n            {\n                byte[] bs = await httpClient.GetByteArrayAsync(workItemStatus.ReportUrl);\n                string report = System.Text.Encoding.Default.GetString(bs);\n                await _hubContext.Clients.Client(browserConnectionId).SendAsync("onComplete", report);\n            }\n\n            if (workItemStatus.Status == Status.Success)\n            {\n                ObjectsApi objectsApi = new ObjectsApi();\n                objectsApi.Configuration.AccessToken = oauth.access_token;\n\n                ApiResponse<dynamic> res = await objectsApi.getS3DownloadURLAsyncWithHttpInfo(\n                                            NickName.ToLower() + "-designautomation",\n                                            outputFileNameOSS, new Dictionary<string, object> {\n                                            { "minutesExpiration", 15.0 },\n                                            { "useCdn", true }\n                                            });\n                await _hubContext.Clients.Client(browserConnectionId).SendAsync("downloadResult", (string)(res.Data.url));\n                Console.WriteLine("Congrats!");\n            }\n        }\n        catch (Exception ex)\n        {\n            await _hubContext.Clients.Client(browserConnectionId).SendAsync("onComplete", ex.Message);\n            Console.WriteLine(ex.Message);\n        }      \n    }\n')),(0,o.yg)("admonition",{type:"note"},(0,o.yg)("p",{parentName:"admonition"},"In the case of a real-world application you would rely on the ",(0,o.yg)("a",{parentName:"p",href:"https://aps.autodesk.com/en/docs/design-automation/v3/developers_guide/callbacks/"},"callback mechanism")," of Design Automation instead of using polling to know when the work item finished")),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"ClearAccount")),(0,o.yg)("p",null,"Last, but not least, to help you test, this api removes all appbundles and activities from your account."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-cs"},'    /// <summary>\n    /// Clear the accounts (for debugging purposes)\n    /// </summary>\n    [HttpDelete]\n    [Route("api/aps/designautomation/account")]\n    public async Task<IActionResult> ClearAccount()\n    {\n        // clear account\n        await _designAutomation.DeleteForgeAppAsync("me");\n        return Ok();\n    }\n')))}u.isMDXComponent=!0;const l={toc:[]},c="wrapper";function p(e){let{components:t,...n}=e;return(0,o.yg)(c,(0,a.A)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("p",null,"The following apis should be added to the ",(0,o.yg)("inlineCode",{parentName:"p"},"DesignAutomation.js")," file before the last line ",(0,o.yg)("inlineCode",{parentName:"p"},"module.exports = router;")),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"StartWorkitem")),(0,o.yg)("p",null,"This is where we actually start the Design Automation process. This endpoint also uploads the input file to an OSS Bucket and define that the output should be saved at the same bucket. To help you identify the files, both input and output uses the same original file name, but with a suffix (input or output) plus a time stamp."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js",metastring:"title=routes/DesignAutomation.js",title:"routes/DesignAutomation.js"},"/// <summary>\n/// Direct To S3\n/// ref : https://aps.autodesk.com/blog/new-feature-support-direct-s3-migration-inputoutput-files-design-automation\n/// </summary>\n\nconst getObjectId = async (bucketKey, objectKey, req) => {\n  try {\n    let contentStream = _fs.createReadStream(req.file.path);\n\n    //uploadResources takes an Object or Object array of resource to uplaod with their parameters,\n    //we are just passing only one object.\n    let uploadResponse = await new ForgeAPI.ObjectsApi().uploadResources(\n      bucketKey,\n      [\n        //object\n        {\n          objectKey: objectKey,\n          data: contentStream,\n          length: req.file.size,\n        },\n      ],\n      {\n        useAcceleration: false, //Whether or not to generate an accelerated signed URL\n        minutesExpiration: 20, //The custom expiration time within the 1 to 60 minutes range, if not specified, default is 2 minutes\n        onUploadProgress: (data) => console.warn(data), // function (progressEvent) => {}\n      },\n      req.oauth_client,\n      req.oauth_token\n    );\n    //lets check for the first and only entry.\n    if (uploadResponse[0].hasOwnProperty(\"error\") && uploadResponse[0].error) {\n      throw new Error(uploadResponse[0].completed.reason);\n    }\n    console.log(uploadResponse[0].completed.objectId);\n    return uploadResponse[0].completed.objectId;\n  } catch (ex) {\n    console.error(\"Failed to create ObjectID\\n\", ex);\n    throw ex;\n  }\n};\n\n/// <summary>\n/// Start a new workitem\n/// </summary>\nrouter.post('/aps/designautomation/workitems', multer({\n  dest: 'uploads/'\n}).single('inputFile'), async /*StartWorkitem*/(req, res) => {\n  const input = req.body;\n\n  // basic input validation\n  const workItemData = JSON.parse(input.data);\n  const widthParam = parseFloat(workItemData.width);\n  const heigthParam = parseFloat(workItemData.height);\n  const activityName = `${Utils.NickName}.${workItemData.activityName}`;\n  const browserConnectionId = workItemData.browserConnectionId;\n\n  // save the file on the server\n  const ContentRootPath = _path.resolve(_path.join(__dirname, '../..'));\n  const fileSavePath = _path.join(ContentRootPath, _path.basename(req.file.originalname));\n\n  // upload file to OSS Bucket\n  // 1. ensure bucket existis\n  const bucketKey = Utils.NickName.toLowerCase() + '-designautomation';\n  try {\n    let payload = new ForgeAPI.PostBucketsPayload();\n    payload.bucketKey = bucketKey;\n    payload.policyKey = 'transient'; // expires in 24h\n    await new ForgeAPI.BucketsApi().createBucket(payload, {}, req.oauth_client, req.oauth_token);\n  } catch (ex) {\n    // in case bucket already exists\n  }\n  // 2. upload inputFile\n  const inputFileNameOSS = `${new Date().toISOString().replace(/[-T:\\.Z]/gm, '').substring(0, 14)}_input_${_path.basename(req.file.originalname)}`; // avoid overriding\n  // prepare workitem arguments\n  const bearerToken = [\"Bearer\", req.oauth_token.access_token].join(\" \");\n  // 1. input file\n  const inputFileArgument = {\n    url: await getObjectId(bucketKey, inputFileNameOSS, req),\n    headers: { \"Authorization\": bearerToken }\n  };\n  // 2. input json\n  const inputJson = {\n    width: widthParam,\n    height: heigthParam\n  };\n  const inputJsonArgument = {\n    url: \"data:application/json, \" + JSON.stringify(inputJson).replace(/\"/g, \"'\")\n  };\n  // 3. output file\n  const outputFileNameOSS = `${new Date().toISOString().replace(/[-T:\\.Z]/gm, '').substring(0, 14)}_output_${_path.basename(req.file.originalname)}`; // avoid overriding  \n  const outputFileArgument = {\n    url: await getObjectId(bucketKey, outputFileNameOSS, req),\n    verb: dav3.Verb.put,\n    headers: { \"Authorization\": bearerToken }\n  };\n\n  // prepare & submit workitem\n  const workItemSpec = {\n    activityId: activityName,\n    arguments: {\n      inputFile: inputFileArgument,\n      inputJson: inputJsonArgument,\n      outputFile: outputFileArgument,\n    }\n  };\n  let workItemStatus = null;\n  try {\n    const api = await Utils.dav3API(req.oauth_token);\n    workItemStatus = await api.createWorkItem(workItemSpec);\n    monitorWorkItem(req.oauth_client, req.oauth_token, workItemStatus.id, browserConnectionId, outputFileNameOSS, inputFileNameOSS);\n  } catch (ex) {\n    console.error(ex);\n    return (res.status(500).json({\n      diagnostic: 'Failed to create a workitem'\n    }));\n  }\n  res.status(200).json({\n    workItemId: workItemStatus.id\n  });\n});\n")),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"MonitorWorkItem")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"/// <summary>\n/// Monitor work item progress \n/// </summary>\nasync function monitorWorkItem(oauthClient, oauthToken, workItemId, browserConnectionId, outputFileName, inputFileName) {\n  const socketIO = require('../server').io;\n  try {\n    while (true) {\n      await new Promise((resolve) => setTimeout(resolve, 2000));\n      const api = await Utils.dav3API(oauthToken);\n      const status = await api.getWorkitemStatus(workItemId);\n      const bucketKey = Utils.NickName.toLowerCase() + '-designautomation';\n      const objectsApi = new ForgeAPI.ObjectsApi();\n      socketIO.to(browserConnectionId).emit('onComplete', status);\n      if (status.status == 'pending' || status.status === 'inprogress') {\n        continue;\n      }\n      let response = await fetch(status.reportUrl);\n      socketIO.to(browserConnectionId).emit('onComplete', await response.text());\n      if (status.status === 'success') {\n        response = await objectsApi.getS3DownloadURL(bucketKey, outputFileName, {\n          useAcceleration: false, minutesExpiration: 15\n        }, oauthClient, oauthToken);\n        socketIO.to(browserConnectionId).emit('downloadResult', response.body.url);\n      } else {\n        throw new Error('Work item failed...');\n      }\n      await objectsApi.deleteObject(bucketKey, inputFileName, oauthClient, oauthToken);\n      return;\n    }\n  } catch (err) {\n    console.error(err);\n    socketIO.to(browserConnectionId).emit('onError', err);\n  }\n}\n")),(0,o.yg)("admonition",{type:"note"},(0,o.yg)("p",{parentName:"admonition"},"In the case of a real-world application you would rely on the ",(0,o.yg)("a",{parentName:"p",href:"https://aps.autodesk.com/en/docs/design-automation/v3/developers_guide/callbacks/"},"callback mechanism")," of Design Automation instead of using polling to know when the work item finished")),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"ClearAccount")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'/// <summary>\n/// Clear the accounts (for debugging purpouses)\n/// </summary>\nrouter.delete(\n  "/aps/designautomation/account",\n  async (/*ClearAccount*/ req, res) => {\n    let api = await Utils.dav3API(req.oauth_token);\n    // clear account\n    await api.deleteForgeApp("me");\n    res.status(200).end();\n  }\n);\n')))}p.isMDXComponent=!0;var m=n(3248);const d={toc:[]},g="wrapper";function h(e){let{components:t,...n}=e;return(0,o.yg)(g,(0,a.A)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("p",null,"The .NET Core ASP.NET project that we created on Visual Studio is empty, therefore when we start it, nothing runs. As our designAutomationSample project now contains a starting page at wwwroot/index.html so we should see its contents upon launch."),(0,o.yg)("p",null,'Visual Studio should list all browsers available in the system for you pick one to start your project. Just select one and click on the "play" icon. The browser should open with your start page.'),(0,o.yg)("img",{src:m.A,style:{width:600}}))}h.isMDXComponent=!0;var y=n(6983);const b={toc:[]},w="wrapper";function f(e){let{components:t,...n}=e;return(0,o.yg)(w,(0,a.A)({},b,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("p",null,'Go to the Debug menu and select Start debugging. The "Debug Console" tab should appear on the bottom, as shown below'),(0,o.yg)("img",{src:y.A,style:{width:600}}),(0,o.yg)("p",null,"Open your browser and go to http://localhost:8080."))}f.isMDXComponent=!0;var k=n(9589),v=n(5201);const A={},S="Execute Workitem",I={unversionedId:"tutorials/design-automation/execute-workitem",id:"tutorials/design-automation/execute-workitem",title:"Execute Workitem",description:"A job that executes a specified Activity, using specified input files and generating appropriate output files.",source:"@site/docs/03-tutorials/04-design-automation/04-execute-workitem.mdx",sourceDirName:"03-tutorials/04-design-automation",slug:"/tutorials/design-automation/execute-workitem",permalink:"/tutorials/design-automation/execute-workitem",draft:!1,editUrl:"https://github.com/autodesk-platform-services/aps-tutorials-website/edit/master/docs/03-tutorials/04-design-automation/04-execute-workitem.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Define Activity",permalink:"/tutorials/design-automation/define-activity"},next:{title:"ACC Administrator",permalink:"/tutorials/acc-admin/"}},N={},C=[{value:"Run &amp; Debug",id:"run--debug",level:2},{value:"Using the sample",id:"using-the-sample",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2}],T={toc:C},O="wrapper";function j(e){let{components:t,...n}=e;return(0,o.yg)(O,(0,a.A)({},T,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"execute-workitem"},"Execute Workitem"),(0,o.yg)("p",null,"A job that executes a specified Activity, using specified input files and generating appropriate output files."),(0,o.yg)("p",null,"The relationship between an Activity and WorkItem can be thought of as a \u201cfunction definition\u201d and \u201cfunction call\u201d, respectively. The Activity specifies the AppBundle(s) to use, which in turn specify the Engine to use. The Workitem is then called to execute those."),(0,o.yg)("p",null,"In this tutorial sample, the workitem specifies the input file URL, the input JSON data with the new parameter values, and the destination URL for the output file. This sample will upload the input file to a OSS bucket before starting the workitem."),(0,o.yg)("admonition",{type:"caution"},(0,o.yg)("p",{parentName:"admonition"},"Please note that executing an activity in the Design Automation service has a cost associated with it,\nsee the ",(0,o.yg)("a",{parentName:"p",href:"https://aps.autodesk.com/pricing"},"Pricing")," page for more details. We recommend that you use\na ",(0,o.yg)("em",{parentName:"p"},"non-expired")," trial subscription when following this tutorial.")),(0,o.yg)(r.A,{NodeJsVsCode:p,DotNetVsCode:u,DotNetVs2022:u,mdxType:"EnvTabs"}),(0,o.yg)("p",null,"Everything ready!"),(0,o.yg)("h2",{id:"run--debug"},"Run & Debug"),(0,o.yg)("p",null,"Now that your app is ready, it's time to run it. This is where we can test and check for possible errors (via debugging)."),(0,o.yg)("h2",{id:"using-the-sample"},"Using the sample"),(0,o.yg)("p",null,"At the top-roght, click on ",(0,o.yg)("strong",{parentName:"p"},"Configure")," to define AppBundle & Activity. This only need to be done once. Specify the new ",(0,o.yg)("inlineCode",{parentName:"p"},"width")," and ",(0,o.yg)("inlineCode",{parentName:"p"},"height")," on the left panel, select the ",(0,o.yg)("inlineCode",{parentName:"p"},"input file")," and click on ",(0,o.yg)("inlineCode",{parentName:"p"},"Start workitem"),". The right panel should show the results."),(0,o.yg)("p",null,"You can find ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/autodesk-platform-services/aps-design-automation-dotnet/tree/master/sample%20files"},"sample files here"),"."),(0,o.yg)("admonition",{type:"caution"},(0,o.yg)("p",{parentName:"admonition"},"If the plugin code changes, then you need to upload a new AppBundle and increase the version (e.g. v1 to v2). This sample will create a new version every time a new AppBundle is uploaded.")),(0,o.yg)("blockquote",null,(0,o.yg)("p",{parentName:"blockquote"},"Both input and output files are saved in OSS Buckets, you can use ",(0,o.yg)("a",{parentName:"p",href:"../simple-viewer/"},"View Models")," tutorial to view them.")),(0,o.yg)(k.A,{src:v.A,mdxType:"ResponsiveVideo"}),(0,o.yg)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"1. The results panel doesn't show the entire information")),(0,o.yg)("p",null,"Make sure the ",(0,o.yg)("strong",{parentName:"p"},"ngrok")," is running and have not expired. Make sure the ngrok address is correctly specified at the environment variable."),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"2. Workitem execute, but result is not as expected")),(0,o.yg)("p",null,"Consider use the ",(0,o.yg)("strong",{parentName:"p"},"Clear Account")," button. This removes all AppBundles & Activities on your account. Then define them again."),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"3. Cannot see my AppBundle at the Configuration form")),(0,o.yg)("p",null,"The ZIP bundles are copied to the ",(0,o.yg)("inlineCode",{parentName:"p"},"bundles")," after you Build the respective plugin. Make sure the ",(0,o.yg)("inlineCode",{parentName:"p"},"Post-build")," event is properly defined and executed after build."),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"4. Ensuring the correct DLL was uploaded")),(0,o.yg)("p",null,"A easy trick to ensure the correct DLL was uploaded to Design Automation is to check it's date. ",(0,o.yg)("a",{parentName:"p",href:"https://stackoverflow.com/a/1600990"},"This StackOverflow answer")," shows how to get the Linker Date (i.e. when the DLL was compiled), with that you can show it on the begining of your code. Note the dates are on the server timezone."),(0,o.yg)("blockquote",null,(0,o.yg)("p",{parentName:"blockquote"},"Plugin is written in ",(0,o.yg)("inlineCode",{parentName:"p"},"C#")," irrespective of server language.")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-cs"},'LogTrace("DLL {0} compiled on {1}",\n    System.IO.Path.GetFileName(System.Reflection.Assembly.GetExecutingAssembly().Location),\n    GetLinkerTime(System.Reflection.Assembly.GetExecutingAssembly()));\n')),(0,o.yg)("p",null,"Ready? Let's run it!"),(0,o.yg)(r.A,{NodeJsVsCode:f,DotNetVsCode:h,DotNetVs2022:h,mdxType:"EnvTabs"}))}j.isMDXComponent=!0},9489:(e,t,n)=>{n.d(t,{A:()=>v});var a=n(8168),o=n(6540),r=n(53),i=n(4245),s=n(6347),u=n(2814),l=n(5167),c=n(1269);function p(e){return function(e){return o.Children.map(e,(e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:o}}=e;return{value:t,label:n,attributes:a,default:o}}))}function m(e){const{values:t,children:n}=e;return(0,o.useMemo)((()=>{const e=t??p(n);return function(e){const t=(0,l.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function d(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:n}=e;const a=(0,s.W6)(),r=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,u.aZ)(r),(0,o.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(a.location.search);t.set(r,e),a.replace({...a.location,search:t.toString()})}),[r,a])]}function h(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,r=m(e),[i,s]=(0,o.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:r}))),[u,l]=g({queryString:n,groupId:a}),[p,h]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,r]=(0,c.Dv)(n);return[a,(0,o.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:a}),y=(()=>{const e=u??p;return d({value:e,tabValues:r})?e:null})();(0,o.useLayoutEffect)((()=>{y&&s(y)}),[y]);return{selectedValue:i,selectValue:(0,o.useCallback)((e=>{if(!d({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);s(e),l(e),h(e)}),[l,h,r]),tabValues:r}}var y=n(1062);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function w(e){let{className:t,block:n,selectedValue:s,selectValue:u,tabValues:l}=e;const c=[],{blockElementScrollPositionUntilNextRender:p}=(0,i.a_)(),m=e=>{const t=e.currentTarget,n=c.indexOf(t),a=l[n].value;a!==s&&(p(t),u(a))},d=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":n},t)},l.map((e=>{let{value:t,label:n,attributes:i}=e;return o.createElement("li",(0,a.A)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>c.push(e),onKeyDown:d,onClick:m},i,{className:(0,r.A)("tabs__item",b.tabItem,i?.className,{"tabs__item--active":s===t})}),n??t)})))}function f(e){let{lazy:t,children:n,selectedValue:a}=e;const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=r.find((e=>e.props.value===a));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},r.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function k(e){const t=h(e);return o.createElement("div",{className:(0,r.A)("tabs-container",b.tabList)},o.createElement(w,(0,a.A)({},e,t)),o.createElement(f,(0,a.A)({},e,t)))}function v(e){const t=(0,y.A)();return o.createElement(k,(0,a.A)({key:String(t)},e))}},9589:(e,t,n)=>{n.d(t,{A:()=>s});var a=n(6540),o=n(3554),r=n.n(o);const i={wrapper:"wrapper_emgM",player:"player_m1gG"};function s(e){let{src:t}=e;return a.createElement("div",{className:i.wrapper},a.createElement(r(),{className:i.player,url:t,playing:!0,loop:!0,width:"100%",height:"100%"}))}}}]);