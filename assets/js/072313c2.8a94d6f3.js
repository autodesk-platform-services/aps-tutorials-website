"use strict";(self.webpackChunkaps_tutorials_website=self.webpackChunkaps_tutorials_website||[]).push([[1314],{3723:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>N,contentTitle:()=>j,default:()=>S,frontMatter:()=>C,metadata:()=>w,toc:()=>k});var r=n(8168),s=(n(6540),n(5680)),o=n(4472);const a={toc:[]},i="wrapper";function l(e){let{components:t,...n}=e;return(0,s.yg)(i,(0,r.A)({},a,n,{components:t,mdxType:"MDXLayout"}),(0,s.yg)("p",null,"Create a ",(0,s.yg)("inlineCode",{parentName:"p"},"admin.js")," file under the ",(0,s.yg)("inlineCode",{parentName:"p"},"routes")," subfolder with the following content:"),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="routes/admin.js"',title:'"routes/admin.js"'},"const express = require('express');\nvar bodyParser = require('body-parser');\n\nconst { authRefreshMiddleware,\n        getProjectUsers\n        } = require('../services/aps.js');\n\nlet router = express.Router();\n\nrouter.use(authRefreshMiddleware); \n\n//get project users list\nrouter.get('/api/admin/projectUsers', async function (req, res, next) {\n    try {\n        const users = await getProjectUsers(req.query.projectId, req.internalOAuthToken.access_token);\n        res.json(users);\n    } catch (err) {\n        next(err);\n    }\n});\n\nmodule.exports = router;\n\n")),(0,s.yg)("p",null,"And mount the router to our server application by modifying ",(0,s.yg)("inlineCode",{parentName:"p"},"server.js"),":"),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="server.js"',title:'"server.js"'},"const express = require('express');\nconst session = require('cookie-session');\nconst { PORT, SERVER_SESSION_SECRET } = require('./config.js');\n\nlet app = express();\napp.use(express.static('wwwroot'));\napp.use(session({ secret: SERVER_SESSION_SECRET, maxAge: 24 * 60 * 60 * 1000 }));\napp.use(require('./routes/auth.js'));\napp.use(require('./routes/hubs.js'));\napp.use(require('./routes/issues.js')); \n// highlight-start\napp.use(require('./routes/admin.js'));\n// highlight-end\napp.listen(PORT, () => console.log(`Server listening on port ${PORT}...`));\n")))}l.isMDXComponent=!0;const u={toc:[]},c="wrapper";function p(e){let{components:t,...n}=e;return(0,s.yg)(c,(0,r.A)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="services/aps.js"',title:'"services/aps.js"'},"\n// ACC Admin APIs\n\n//get project users list\nservice.getProjectUsers = async (projectId, token) => {\n    let allUsers = [];\n    let offset = 0;\n    let totalResults = 0;\n    do{\n        const resp = await adminClient.getProjectUsers( projectId, {accessToken:token,offset:offset});\n        \n        allUsers = allUsers.concat(resp.results);\n        offset += resp.pagination.limit;\n        totalResults = resp.pagination.totalResults;\n    }while (offset < totalResults) \n    return allUsers;    \n}; \n")))}p.isMDXComponent=!0;const d={toc:[{value:"Project users",id:"project-users",level:2}]},m="wrapper";function g(e){let{components:t,...n}=e;return(0,s.yg)(m,(0,r.A)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.yg)("p",null,"Add the ",(0,s.yg)("inlineCode",{parentName:"p"},"@aps_sdk/construction-account-admin")," library, and also create an instance of\nSDK client of ",(0,s.yg)("inlineCode",{parentName:"p"},"adminClient")," at the beginning of ",(0,s.yg)("inlineCode",{parentName:"p"},"services/aps.js")," file:"),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="services/aps.js"',title:'"services/aps.js"'},"const { SdkManagerBuilder } = require('@aps_sdk/autodesk-sdkmanager');\nconst { AuthenticationClient, Scopes, ResponseType } = require('@aps_sdk/authentication');\nconst { DataManagementClient } = require('@aps_sdk/data-management');\nconst { IssueClient } = require('@aps_sdk/construction-issues');\n// highlight-start\nconst { AdminClient } = require('@aps_sdk/construction-account-admin');\n// highlight-end\nconst { APS_CLIENT_ID, APS_CLIENT_SECRET, APS_CALLBACK_URL, INTERNAL_TOKEN_SCOPES, PUBLIC_TOKEN_SCOPES } = require('../config.js');\n\nconst service = module.exports = {};\n\nconst sdk = SdkManagerBuilder.create().build();\nconst authenticationClient = new AuthenticationClient(sdk);\nconst dataManagementClient = new DataManagementClient(sdk);\nconst issueClient = new IssueClient(sdk);\n// highlight-start\nconst adminClient = new AdminClient(sdk);\n// highlight-end\n")),(0,s.yg)("h2",{id:"project-users"},"Project users"),(0,s.yg)("p",null,"Next, we will add helper function to extract project users. Append the following code to the end of the ",(0,s.yg)("inlineCode",{parentName:"p"},"services/aps.js")," file. Similaly, this API also works with ",(0,s.yg)("strong",{parentName:"p"},"pagination"),".\nThe code will extract all users."),(0,s.yg)(p,{mdxType:"NodeJsVsCodeAdmin"}))}g.isMDXComponent=!0;const f={toc:[]},y="wrapper";function h(e){let{components:t,...n}=e;return(0,s.yg)(y,(0,r.A)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,s.yg)("p",null,"Create a ",(0,s.yg)("inlineCode",{parentName:"p"},"AdminController.cs")," file under the ",(0,s.yg)("inlineCode",{parentName:"p"},"Controllers")," subfolder with the following content:"),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="Controllers/AdminController.cs"',title:'"Controllers/AdminController.cs"'},' using System.Threading.Tasks;\n using aps_acc_issues_dotnet.Models;\n using Microsoft.AspNetCore.Mvc;\n using Microsoft.Extensions.Logging;\n using Newtonsoft.Json;\n\n [ApiController]\n [Route("api/[controller]")]\n public class AdminController : ControllerBase\n {\n     private readonly ILogger<AdminController> _logger;\n     private readonly APS _aps;\n\n     public AdminController(ILogger<AdminController> logger, APS aps)\n     {\n         _logger = logger;\n         _aps = aps;\n     }\n\n     [HttpGet("projectUsers")]\n     public async Task<ActionResult<string>> ListProjectUsers(string projectId)\n     {\n         var tokens = await AuthController.PrepareTokens(Request, Response, _aps);\n         if (tokens == null)\n         {\n             return Unauthorized();\n         }\n\n         var projects = await _aps.GetProjectUsersACC(Request.Query["projectId"], tokens);\n         return JsonConvert.SerializeObject(projects);\n     }\n\n }\n')))}h.isMDXComponent=!0;const b={toc:[]},v="wrapper";function A(e){let{components:t,...n}=e;return(0,s.yg)(v,(0,r.A)({},b,n,{components:t,mdxType:"MDXLayout"}),(0,s.yg)("p",null,"Create ",(0,s.yg)("inlineCode",{parentName:"p"},"APS.Admin.cs")," file under ",(0,s.yg)("inlineCode",{parentName:"p"},"Models")," folder, add following content."),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="Models/APS.Admin.cs"',title:'"Models/APS.Admin.cs"'}," using System.Collections.Generic;\n using System.Threading.Tasks;\n using Autodesk.Construction.AccountAdmin;\n using Autodesk.Construction.AccountAdmin.Model;\n\n public partial class APS\n {\n     // ACC Issue API, only tells the user id with related fields.\n     //to fetch the information of the user, call the endpoint below and map with the user id.\n     public async Task<IEnumerable<dynamic>> GetProjectUsersACC(string projectId, Tokens tokens)\n     {\n         AdminClient adminClient = new AdminClient(_SDKManager);\n         var allUsers = new List<ProjectUser>();\n         var offset = 0;\n         var totalResult = 0;\n         do\n         {\n             var users = await adminClient.GetProjectUsersAsync(projectId, accessToken: tokens.InternalToken, offset: offset);\n             allUsers.AddRange(users.Results);\n             offset += (int)users.Pagination.Limit;\n             totalResult = (int)users.Pagination.TotalResults;\n         } while (offset < totalResult);\n         return allUsers;\n     }\n }\n")))}A.isMDXComponent=!0;const C={},j="Project Admin",w={unversionedId:"tutorials/acc-issues/admin",id:"tutorials/acc-issues/admin",title:"Project Admin",description:"Some issue attributes are related to project members, we will use ACC Admin API to get the information. This sample demos how to fetch project users.",source:"@site/docs/03-tutorials/06-acc-issues/06-admin.mdx",sourceDirName:"03-tutorials/06-acc-issues",slug:"/tutorials/acc-issues/admin",permalink:"/tutorials/acc-issues/admin",draft:!1,editUrl:"https://github.com/autodesk-platform-services/aps-tutorials-website/edit/master/docs/03-tutorials/06-acc-issues/06-admin.mdx",tags:[],version:"current",sidebarPosition:6,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Issue Settings",permalink:"/tutorials/acc-issues/settings"},next:{title:"UI Framework",permalink:"/tutorials/acc-issues/ui"}},N={},k=[{value:"ACC Admin SDK",id:"acc-admin-sdk",level:2},{value:"Server endpoints",id:"server-endpoints",level:2},{value:"Try it out",id:"try-it-out",level:2}],T={toc:k},E="wrapper";function S(e){let{components:t,...a}=e;return(0,s.yg)(E,(0,r.A)({},T,a,{components:t,mdxType:"MDXLayout"}),(0,s.yg)("h1",{id:"project-admin"},"Project Admin"),(0,s.yg)("p",null,"Some issue attributes are related to project members, we will use ACC Admin API to get the information. This sample demos how to fetch project users."),(0,s.yg)("h2",{id:"acc-admin-sdk"},"ACC Admin SDK"),(0,s.yg)("p",null,"First, let's include the ACC Admin SDK:"),(0,s.yg)(o.A,{NodeJsVsCode:g,DotNetVsCode:A,DotNetVs2022:A,mdxType:"EnvTabs"}),(0,s.yg)("h2",{id:"server-endpoints"},"Server endpoints"),(0,s.yg)("p",null,"Next, let's expose the routings to get project users to the client-side code through another\nset of endpoints. "),(0,s.yg)(o.A,{NodeJsVsCode:l,DotNetVsCode:h,DotNetVs2022:h,mdxType:"EnvTabs"}),(0,s.yg)("h2",{id:"try-it-out"},"Try it out"),(0,s.yg)("p",null,"And that's it for the server side. Time to try it out!"),(0,s.yg)("ul",null,(0,s.yg)("li",{parentName:"ul"},"Use same project ID in previous step (remove b.) and try to call the endpoint:\n",(0,s.yg)("a",{parentName:"li",href:"http://localhost:8080/api/issues/subtypes?projectId=%7Byour-project-id%7D"},"http://localhost:8080/api/admin/projectUsers?projectId={your-project-id}"),", the server application should\nrespond with a JSON list of all the users from this project. ")),(0,s.yg)("p",null,(0,s.yg)("img",{alt:"Users Response",src:n(4452).A,width:"2065",height:"811"})),(0,s.yg)("admonition",{type:"info"},(0,s.yg)("p",{parentName:"admonition"},"Admin API has not exposed endpoint to get project roles. The workaround is to use ",(0,s.yg)("a",{parentName:"p",href:"https://aps.autodesk.com/apis-and-services/data-connector-api"},"Data Connector API"),"."),(0,s.yg)("p",{parentName:"admonition"},"Admin API exposes endpoint to ",(0,s.yg)("a",{parentName:"p",href:"https://aps.autodesk.com/en/docs/acc/v1/reference/http/projects-:project_id-companies-GET/"},"get project companies"),", but it supports App context authentication only. While this tutorial sample builds the skeleton of user context authentication.\nif you want to fetch, you could add code to get 2-legged token to call this API."),(0,s.yg)("p",{parentName:"admonition"},"Or by ",(0,s.yg)("a",{parentName:"p",href:"https://aps.autodesk.com/apis-and-services/data-connector-api"},"Data Connector API"),"to get list of roles, companies and even users.")))}S.isMDXComponent=!0},4452:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/project-users-420634c7a905633c2f308cc216f13bc5.webp"},4472:(e,t,n)=>{n.d(t,{A:()=>a});var r=n(6540),s=n(9489),o=n(7227);function a(e){let{NodeJsVsCode:t,DotNetVsCode:n,DotNetVs2022:a}=e;return r.createElement(s.A,{groupId:"development-environment"},r.createElement(o.A,{value:"nodejs-vscode",label:"Node.js & VSCode",default:!0},r.createElement(t,null)),r.createElement(o.A,{value:"dotnet-vscode",label:".NET & VSCode"},r.createElement(n,null)),r.createElement(o.A,{value:"dotnet-vs2022",label:".NET & VS2022"},r.createElement(a,null)))}},5680:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>g});var r=n(6540);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(n),m=s,g=p["".concat(l,".").concat(m)]||p[m]||d[m]||o;return n?r.createElement(g,a(a({ref:t},c),{},{components:n})):r.createElement(g,a({ref:t},c))}));function g(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=n.length,a=new Array(o);a[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[p]="string"==typeof e?e:s,a[1]=i;for(var u=2;u<o;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7227:(e,t,n)=>{n.d(t,{A:()=>a});var r=n(6540),s=n(53);const o={tabItem:"tabItem_Ymn6"};function a(e){let{children:t,hidden:n,className:a}=e;return r.createElement("div",{role:"tabpanel",className:(0,s.A)(o.tabItem,a),hidden:n},t)}},9489:(e,t,n)=>{n.d(t,{A:()=>C});var r=n(8168),s=n(6540),o=n(53),a=n(4245),i=n(6347),l=n(2814),u=n(5167),c=n(1269);function p(e){return function(e){return s.Children.map(e,(e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:s}}=e;return{value:t,label:n,attributes:r,default:s}}))}function d(e){const{values:t,children:n}=e;return(0,s.useMemo)((()=>{const e=t??p(n);return function(e){const t=(0,u.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:n}=e;const r=(0,i.W6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l.aZ)(o),(0,s.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(r.location.search);t.set(o,e),r.replace({...r.location,search:t.toString()})}),[o,r])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,o=d(e),[a,i]=(0,s.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:o}))),[l,u]=g({queryString:n,groupId:r}),[p,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,o]=(0,c.Dv)(n);return[r,(0,s.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:r}),y=(()=>{const e=l??p;return m({value:e,tabValues:o})?e:null})();(0,s.useLayoutEffect)((()=>{y&&i(y)}),[y]);return{selectedValue:a,selectValue:(0,s.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),f(e)}),[u,f,o]),tabValues:o}}var y=n(1062);const h={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(e){let{className:t,block:n,selectedValue:i,selectValue:l,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:p}=(0,a.a_)(),d=e=>{const t=e.currentTarget,n=c.indexOf(t),r=u[n].value;r!==i&&(p(t),l(r))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return s.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:a}=e;return s.createElement("li",(0,r.A)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>c.push(e),onKeyDown:m,onClick:d},a,{className:(0,o.A)("tabs__item",h.tabItem,a?.className,{"tabs__item--active":i===t})}),n??t)})))}function v(e){let{lazy:t,children:n,selectedValue:r}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===r));return e?(0,s.cloneElement)(e,{className:"margin-top--md"}):null}return s.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,s.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function A(e){const t=f(e);return s.createElement("div",{className:(0,o.A)("tabs-container",h.tabList)},s.createElement(b,(0,r.A)({},e,t)),s.createElement(v,(0,r.A)({},e,t)))}function C(e){const t=(0,y.A)();return s.createElement(A,(0,r.A)({key:String(t)},e))}}}]);